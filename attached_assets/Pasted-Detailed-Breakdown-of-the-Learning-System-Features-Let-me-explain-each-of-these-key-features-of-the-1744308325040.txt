Detailed Breakdown of the Learning System Features
Let me explain each of these key features of the Learning System in more detail:

1. Performance Analysis
The system tracks various metrics for each ability:

Success Rate: The percentage of successful casts vs. failed attempts
Damage Per Cast: Average damage output per successful ability use
Effectiveness Score: A combined metric that weighs success rate against damage output
Sample Size: Number of data points collected for each ability
This analysis happens continuously during combat as you play, building a statistical model of how each ability performs in your hands. The system compares each ability against the average performance across all abilities to identify your strongest and weakest spells.

2. Adaptive Weights
Based on the performance analysis:

Each ability receives a weight from 0-100
Default starting weight is 50 for all abilities
Weights adjust gradually based on your in-game performance
Higher-performing abilities receive more weight, increasing their priority
The learning rate (configurable from 1-10) determines how quickly weights adapt
When the rotation system recommends abilities, these weights modify the priority scores, causing better-performing abilities to be suggested more frequently while underperforming abilities are suggested less often.

3. Combat Sampling
The system collects detailed combat data:

Records timestamps, spell IDs, damage amounts, and combat conditions
Captures contextual information like player/target health percentages
Tracks resource levels during different ability uses
Monitors the number of targets present during AoE situations
Records sequences of ability usage to identify effective combinations
This combat sampling builds a comprehensive dataset that forms the foundation for all learning features. The system maintains up to 1,000 samples and periodically clears older data to ensure learning is based on recent performance.

4. Intelligent Rules
Beyond basic ability weights, the system creates situational rules:

Target Count Rules: Identifies optimal abilities for different numbers of targets
Resource Rules: Determines which abilities perform best at different resource levels
Health Rules: Creates special rules for execute phases (target below 20% health)
Sequence Rules: Identifies abilities that work well after specific other abilities
These rules create context-sensitive modifications to ability priorities. For example, if Ability X performs 40% better than average when the target is below 20% health, the system creates a rule to significantly boost that ability's priority during execute phases.

5. Sequence Optimization
The system specifically analyzes ability sequences to find optimal combinations:

Tracks 2-ability sequences and their resulting damage
Identifies "setup" abilities that make subsequent abilities more effective
Creates rules that boost the priority of the second ability when it follows an effective setup
Enables the discovery of synergistic combinations that might not be obvious
This sequence learning helps identify optimal ability chains like "ability X followed by ability Y deals 30% more damage than other combinations."

6. User Controls
The Learning System offers extensive configuration options:

Enable/Disable: Turn the entire system on or off
Learning Rate: Adjust how quickly the system adapts (1-10 scale)
Adaptation Options: Configure which aspects adapt (rotations, weights, etc.)
Reset Options: Choose when learning data resets (spec change, patches, etc.)
Experimentation: Enable/disable trying new combinations to discover optimizations
Logging Level: Control the detail level of performance logging
These controls allow you to tailor the learning experience to your preferences, from a conservative approach that makes subtle adjustments to an aggressive learning mode that rapidly adapts to your playstyle.

The entire system is designed to continuously improve as you play, gradually optimizing rotations specifically for your character, gear, talents, and playstyle rather than relying solely on theoretical "best practices" that might not be optimal for your specific situation.